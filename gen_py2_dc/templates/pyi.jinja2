class _{{ class_name }}Dict(TypedDict):
    {%- for name, type in fields %}
    {{ name }}: {{ type }}
    {%- endfor %}

class {{ class_name }}:
    {%- for name, type in fields %}
    _{{ name }}: {{ type }}
    {%- endfor %}
    def __init__(
        self,
        {%- for name, type in fields %}
        {{ name }}: {{ type }},
        {%- endfor %}
    ) -> None:...
    def __eq__(self, other: Any) -> bool: ...
    {%- for name, type in fields %}
    @property
    def {{ name }}(self) -> {{ type }}: ...
    {%- endfor %}
    def asdict(self) -> _{{ class_name }}Dict: ...
